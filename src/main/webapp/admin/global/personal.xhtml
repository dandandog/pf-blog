<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:fn="http://java.sun.com/jsp/jstl/functions"
                template="/WEB-INF/template.xhtml"
                xmlns:framework="http://java.sun.com/jsf/composite/components">

    <ui:define name="title">Empty Page</ui:define>

    <ui:define name="head">
        <h:outputStylesheet>
            .xxxlarge {
                width: 200px !important;
                height: 200px !important;
                font-size: 28px !important;
            }

            .xxlarge {
                width: 100px !important;
                height: 100px !important;
            }

            .ui-fileupload-row {
                display: flex !important;
                align-items: center;
            }

            .ui-password-masked input {
                width: 100%;
            }

        </h:outputStylesheet>
    </ui:define>

    <ui:define name="viewname">
        <li>global</li>
        <li>/</li>
        <li>personal</li>
    </ui:define>

    <ui:define name="content">
        <div class="card">
            <h:form id="personal_form" prependId="false">

                <p:toolbar id="entityToolbar" styleClass="ui-my-toolbar" style="border: unset;">
                    <f:facet name="left">
                        <p:outputPanel layout="inline">
                            <p:commandButton id="save_btn" widgetVar="save_btn" icon="pi pi-save"
                                             style="margin-right: .5rem"
                                             value="#{msg['framework']['save']}"
                                             action="#{controller.save}"
                                             update="@form,@(.principal-info)"/>
                        </p:outputPanel>
                    </f:facet>
                </p:toolbar>

                <p:outputPanel style="width: 800px;margin: auto">
                    <p:outputPanel styleClass="p-d-flex p-ai-start">
                        <p:outputPanel layout="block" styleClass="ui-fluid p-formgrid p-grid">
                            <p:divider align="left" type="dashed">
                                <b>#{msg['blog']['personalInfo']}</b>
                            </p:divider>

                            <framework:label value="#{msg['framework']['username']}">
                                <p:inputText value="#{viewScope.user.username}" disabled="true"/>
                            </framework:label>
                            <framework:label value="#{msg['blog']['nickname']}">
                                <p:inputText value="#{viewScope.user.nickname}"/>
                            </framework:label>
                            <framework:label value="#{msg['blog']['homepage']}">
                                <p:inputText value="#{viewScope.user.remark}"/>
                            </framework:label>
                            <framework:label value="#{msg['blog']['email']}">
                                <p:inputText value="#{viewScope.user.email}"/>
                            </framework:label>

                            <p:divider align="left" type="dashed">
                                <b>#{msg['blog']['password']}</b>
                            </p:divider>
                            <framework:label value="#{msg['framework']['inputPassword']}">
                                <p:password id="password1" match="@widgetVar(password2)" feedback="true"
                                            autocomplete="new-password"
                                            promptLabel="#{msg['framework']['promptPassword']}"
                                            weakLabel="#{msg['framework']['weakPassword']}"
                                            goodLabel="#{msg['framework']['goodPassword']}"
                                            strongLabel="#{msg['framework']['strongPassword']}"
                                            validatorMessage="#{msg['framework']['diffPassword']}"
                                            value="#{viewScope.user.password}"/>
                            </framework:label>

                            <framework:label value="#{msg['framework']['confirmPassword']}">
                                <p:password id="password2" widgetVar="password2" autocomplete="new-password"
                                            value="#{viewScope.user.password}"/>
                            </framework:label>


                        </p:outputPanel>
                        <p:outputPanel layout="block" styleClass="p-md-4 p-d-flex p-flex-wrap">

                            <p:outputPanel id="avatar_panel" styleClass="p-mb-2">
                                <p:avatar rendered="#{empty viewScope.user.avatarUrl}"
                                          label="#{fn:toUpperCase(viewScope.user.nickname)}"
                                          styleClass="xxxlarge"/>
                                <p:avatar rendered="#{not empty viewScope.user.avatarUrl}"
                                          styleClass="xxxlarge">
                                    <p:graphicImage url="#{viewScope.user.avatarUrl}"/>
                                </p:avatar>
                                <p:commandButton value="#{msg['framework']['edit']}"
                                                 action="#{controller.initCropUploader}"
                                                 oncomplete="PF('cropper_dialog').show()" style="width: 200px;"
                                                 update="@widgetVar(cropper_dialog)"/>
                            </p:outputPanel>
                            <p:outputPanel styleClass="p-mb-2">
                                <h:panelGrid columns="2">
                                    <h:outputText value="密码更新于"/>
                                    <h:outputText value="#{viewScope.user.pwdRestTime}">
                                        <f:convertDateTime type="localDateTime"
                                                           pattern="#{msg['format']['localDateTime']}"/>
                                    </h:outputText>
                                    <h:outputText value="ssss"/>
                                    <h:outputText value="xxxx"/>
                                </h:panelGrid>
                            </p:outputPanel>
                        </p:outputPanel>

                    </p:outputPanel>
                </p:outputPanel>
            </h:form>
        </div>
    </ui:define>
    <ui:param name="documentationLink" value="/components/imagecropper"/>
    <ui:param name="widgetLink" value="imagecropper"/>
    <ui:define name="dialog">
        <h:form id="dialogForm">
            <framework:dialog id="cropper" saveDisabled="false" saveUpdate="personal_form,@(.principal-info)"
                              height="500" header="#{msg['framework']['upload']}">
                <p:outputPanel styleClass="p-field p-col-12">
                    <p:outputPanel layout="block">
                        <p:fileUpload
                                multiple="false" mode="advanced"
                                sizeLimit="102400" allowTypes="/(\.|\/)(gif|jpe?g|png)$/"
                                label="#{msg['framework']['pleaseChoose']}"
                                chooseIcon="ui-icon-plusthick"
                                cancelLabel="#{msg['framework']['cancel']}"
                                cancelIcon="ui-icon-cancel"
                                uploadLabel="#{msg['framework']['upload']}"
                                uploadIcon="ui-icon-arrowreturnthick-1-n"
                                invalidSizeMessage="#{msg['framework']['invalidFileSize']}"
                                invalidFileMessage="#{msg['framework']['invalidFileType']}"
                                update="cropper_panel"
                                listener="#{controller.handleFileUpload}">
                        </p:fileUpload>
                    </p:outputPanel>

                    <p:outputPanel id="cropper_panel" styleClass="p-grid p-mt-2" style="height: 300px">
                        <p:outputPanel styleClass="p-col-5 p-d-flex p-ai-center p-jc-center">
                            <p:outputPanel rendered="#{not empty sessionScope.cropUploader}">
                                <p:imageCropper
                                        value="#{sessionScope.cropUploader.croppedImage}"
                                        id="image_cropper" cache="false"
                                        aspectRatio="1"
                                        image="#{sessionScope.cropUploader.image}"
                                        boxWidth="300" boxHeight="300"
                                />
                                <p:outputPanel class="ui-button-group">
                                    <p:commandButton value="#{msg['blog']['crop']}" style="width: 50%"
                                                     update="cropped"/>

                                    <p:commandButton value="#{msg['framework']['cancel']}" style="width: 50%"
                                                     action="#{controller.initCropUploader}"
                                                     update="cropper_panel"/>
                                </p:outputPanel>
                            </p:outputPanel>
                        </p:outputPanel>

                        <div class="p-col-2">
                            <p:divider layout="vertical">
                                <b>#{msg['blog']['preview']}</b>
                            </p:divider>
                        </div>
                        <p:outputPanel id="cropped" styleClass="p-col-5 p-d-flex p-ai-center p-jc-center">
                            <p:outputPanel layout="block">
                                <p:avatar rendered="#{not empty sessionScope.cropUploader.croppedImage}"
                                          styleClass="xxlarge p-m-2">
                                    <p:graphicImage cache="false" value="#{sessionScope.cropUploader.cropped}"/>
                                </p:avatar>
                                <p:avatar rendered="#{not empty sessionScope.cropUploader.croppedImage}"
                                          size="xlarge" styleClass="p-m-2">
                                    <p:graphicImage cache="false" value="#{sessionScope.cropUploader.cropped}"/>
                                </p:avatar>
                                <p:avatar rendered="#{not empty sessionScope.cropUploader.croppedImage}"
                                          size="large" styleClass="p-m-2">
                                    <p:graphicImage cache="false" value="#{sessionScope.cropUploader.cropped}"/>
                                </p:avatar>
                            </p:outputPanel>

                            <p:outputPanel layout="block">
                                <p:avatar rendered="#{not empty sessionScope.cropUploader.croppedImage}"
                                          styleClass="xxlarge p-m-2" shape="circle">
                                    <p:graphicImage cache="false" value="#{sessionScope.cropUploader.cropped}"/>
                                </p:avatar>
                                <p:avatar rendered="#{not empty sessionScope.cropUploader.croppedImage}"
                                          size="xlarge" shape="circle" styleClass="p-m-2">
                                    <p:graphicImage cache="false" value="#{sessionScope.cropUploader.cropped}"/>
                                </p:avatar>
                                <p:avatar rendered="#{not empty sessionScope.cropUploader.croppedImage}"
                                          size="large" shape="circle" styleClass="p-m-2">
                                    <p:graphicImage cache="false" value="#{sessionScope.cropUploader.cropped}"/>
                                </p:avatar>
                            </p:outputPanel>
                        </p:outputPanel>
                    </p:outputPanel>
                </p:outputPanel>
            </framework:dialog>
        </h:form>
    </ui:define>
</ui:composition>